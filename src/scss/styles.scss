@use "./mixins/mixins" as m;
// imports 
@import "../../node_modules/bootstrap/scss/functions";
@import "./variables/variables";
@import "../../node_modules/bootstrap/scss/bootstrap.scss";

@import "./page/login";
@import "./layout/sidebar";



//code 

body{ overflow-x: hidden; }
.navbar {z-index: 1000;}

$font-family: "open sans";

// menu icon nav bar
$gap-bars: 25%;
$height-bars: calc((100% - (2 * $gap-bars)) / 3 );

.bar {
    background: $white;
    width: 100%;
    height: $height-bars;
    border-radius: 100px;
    @include m.vendor-prefix(transition, all 200ms ease-in-out);
    
    &-rotate {
        position: absolute;
        top: 50%;
        translate: 0 -50%;
    }

    [aria-expanded=true] &:not(&-rotate) { opacity: 0; }
    [aria-expanded=true] &-rotate { transform: rotate(45deg); }
    [aria-expanded=true] &-rotate:nth-of-type(2) { transform: rotate(-45deg); }
}
// end-- menu icon navbar

// search field navbar
#site-search {
    position: relative;

    &:hover, &:focus-within {
        @include m.pseudo(after, 100%, 2px) {
            width: 100%;
        }

        & .form-control{ 
            @include media-breakpoint-up(lg) {width: 25ch;} 
            box-shadow: none;
        }
    }

    @include m.pseudo(after, 0%, 1px) {
        background-color: currentColor;
        bottom: 0;
        transition: all 200ms ease;
    }; 

    & .form-control {
        background: transparent;
        border: none;
        transition: all 200ms ease;
        
        @include media-breakpoint-up(lg) { 
            width: calc(10ch + $input-padding-x); 
        }
        
        &::placeholder {color: currentColor;}
    }
    & .fa-solid:hover {color: white;}
}
// end-- search field navbar

// form labels
.form-label{
    display: flex;
    position: relative;
    align-items: center;

    & > span {
        flex: 1;
        height: 1px;
        background-color: currentColor;
    }
}
// form labels end

// posts 
$user-color: rgb(224, 227, 237) !default; 
// user-color will be the way to adjust each users post to their color. some JS will be needed, but for now this will be a template. will be fully functional with the api. 

.post {

    

    &--container {
        max-width:675px
    }

    & .card-header {
        background-color: $user-color;
        color: color-contrast($user-color)
    }

    & .profile-img {
        & img {
            object-fit: cover;
            object-position: center;
        }
    }

    & .card-footer {
        background-color: rgba($user-color, 0.1);

        & .comment {


            &-content {
                min-width: min(200px, 100%);
            }
            & textarea {
                background: transparent;
                border: none;
                border-bottom: 1px solid currentColor;

                &::placeholder {
                    translate: 0 100%;
                }
            }

            & .submit-comment {
                background: $user-color;
                color: color-contrast($user-color);
            }
        }
    }

    &-comments {
        & .comment {
            &:not(:nth-child(1)) {
                
                position: relative;
                @include m.pseudo(after, 100%, 1px) {
                    background-color: #00000040;
                    top: 0;
                    left: 0;
                }
            }
        }
    }


    &--create {
        & textarea {
            resize: none;
        } 
        & .btn[type='submit']{
            background-color: $user-color;
            color: color-contrast($user-color);
            border-color: $user-color;
        }
    }
}

.liked {
    color: rgb(224, 57, 38)
}


.profile-page {
    &__user {
        position: relative;
        height: clamp(250px, 75vmin, 400px);

        & .banner {
            $calc-img-translate: calc( clamp(min(175px, 50%), 20vw + 0.25rem, 200px)  /  3);

            position: absolute;
            z-index: -1;
            &__img {
                height: calc(100% - $calc-img-translate);
                background: $user-color;
            }
            &__spacer {
                height: $calc-img-translate;
            }
        }

        
        &-img {
            & img {
                width: clamp(min(175px, 50%), 20vw + 0.25rem, 200px);
                min-width: 100px;
                border-color: $user-color;
            }
        }
    }
    h1 {
        max-width: min(350px, 60vw) !important;
        text-align: center;
    }


    & .banner {
        height: 300px;
    }

}

#profile-bio {



    & img {
        background-color: grey;
        width: 100px;
        aspect-ratio: 1;
    }

    & .carousel-indicators .btn {
        background-color: white;
        
        &.active {
            color: color-contrast($user-color) !important;
            background-color: $user-color;
        }
    }
}

#friend-list {
    & .scroll-list {
        overflow-x: auto;
        padding-inline: 20px;

        &::-webkit-scrollbar {
            display: none;
        }
    }

    @include m.pseudo(before, 20px, 100%) {
        top: 0;
        left: 0;
        background: linear-gradient(90deg, #fff, #ffffff00);
    }
    
    @include m.pseudo(after, 20px, 100%) {
        top: 0;
        right: 0;
        background: linear-gradient(-90deg, #fff, #ffffff00);
    }
    
       
        
}